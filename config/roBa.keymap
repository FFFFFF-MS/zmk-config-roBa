#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        passward1: passward1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp E &kp LS(V) &kp O &kp N1 &kp C &kp E &kp NUMBER_1 &kp N3>;
            label = "PASSWARD1";
        };

        password2: password2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(G) &kp E &kp M &kp A &kp T &kp R &kp NUMBER_1 &kp A>;
            label = "PASSWORD2";
        };

        mail: mail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K &kp A &kp S &kp A &kp I &kp M &kp S &kp N2 &kp N1 &kp LEFT_BRACKET &kp G &kp M &kp A &kp I &kp L &kp PERIOD &kp C &kp O &kp M>;
            label = "MAIL";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R        &kp T                                               &kp Y           &kp U        &kp I        &kp O         &kp P
&kp A             &lt 3 S       &mt LSHFT D   &mt LCTRL F  &mt LEFT_ALT G  &kp PAGE_UP        &mkp MB1         &mt LEFT_ALT H  &mt LCTRL J  &mt LSHFT K  &lt 5 L       &kp MINUS
&lt 4 Z           &kp X         &kp C         &kp V        &mt LEFT_WIN B  &kp PAGE_DOWN      &mkp MB2         &mt LEFT_WIN N  &kp M        &kp COMMA    &lt 2 PERIOD  &lt 4 SLASH
&kp LEFT_CONTROL  &lt 6 LSHIFT  &kp LEFT_ALT  &lt 3 ENTER  &lt 1 SPACE     &lt 2 TAB          &lt 1 BACKSPACE  &mo 3                                                   &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM {
            bindings = <
&kp ESC    &kp LS(NUMBER_2)  &kp F2             &kp PERCENT       &kp LS(NUMBER_6)                                 &kp SINGLE_QUOTE  &kp N7  &kp N8  &kp N9  &kp KP_ASTERISK
&kp EXCL   &kp LEFT_BRACKET  &mt LSHIFT LS(N7)  &kp LEFT_CONTROL  &kp LEFT_ALT      &kp LS(N8)      &kp LS(N8)     &kp LS(MINUS)     &kp N4  &kp N5  &kp N6  &kp KP_MINUS
&kp LC(Z)  &kp LC(X)         &kp LC(C)          &kp LC(V)         &none             &kp LS(N9)      &kp LS(N9)     &kp N0            &kp N1  &kp N2  &kp N3  &kp KP_PLUS
&trans     &trans            &trans             &trans            &trans            &trans          &kp BACKSPACE  &none                                     &none
            >;
        };

        SubNUM-Volume {
            bindings = <
&kp C_MUTE           &kp C_VOLUME_DOWN  &kp C_VOL_UP         &kp LG(LC(V))              &none                                       &kp CARET              &kp SEMICOLON        &kp COLON      &kp AT_SIGN       &kp LEFT_BRACKET
&kp N1               &kp NUMBER_2       &mt LSHIFT NUMBER_3  &mt LEFT_CONTROL NUMBER_4  &mt LEFT_ALT N5  &trans      &trans         &mt LEFT_ALT NUMBER_6  &mt LEFT_CONTROL N7  &mt LSHIFT N8  &kp N9            &kp N0
&kp LA(PRINTSCREEN)  &kp LG(LS(S))      &none                &mkp LCLK                  &mkp RCLK        &trans      &trans         &kp LS(LC(F10))        &mkp LCLK            &kp INT_YEN    &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&passward1           &password2         &mail                &trans                     &trans           &trans      &kp LA(GRAVE)  &none                                                                        &kp LA(LSHIFT)
            >;
        };

        ARROW {
            bindings = <
&kp LC(LA(DEL))  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none             &none                                        &kp HOME       &kp END   &kp PAGE_UP      &kp UP_ARROW       &kp PAGE_DOWN
&none            &none                 &kp LSHIFT            &kp LEFT_CONTROL  &kp LEFT_ALT  &trans                 &trans  &kp LA(LEFT)   &mkp MB1  &kp LEFT         &kp DOWN_ARROW     &kp RIGHT
&none            &none                 &none                 &none             &kp LWIN      &trans                 &trans  &kp LA(RIGHT)  &mkp MB2  &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)  &kp LG(LS(RIGHT))
&trans           &trans                &trans                &kp LA(PAGE_UP)   &kp SPACE     &kp LA(PAGE_DOWN)      &trans  &trans                                                       &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        FUNCTION {
            bindings = <
&kp F1  &kp F2  &kp F3        &kp F4            &kp F5                            &kp F8        &kp F9            &kp F10       &kp F11  &kp F12
&trans  &trans  &kp LSHFT     &kp LEFT_CONTROL  &kp LEFT_ALT  &kp F6      &kp F7  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LSHIFT    &none    &trans
&trans  &trans  &bt BT_SEL 1  &bt BT_SEL 0      &kp LWIN      &trans      &trans  &kp LWIN      &bt BT_SEL 0      &bt BT_SEL 1  &trans   &trans
&trans  &trans  &trans        &trans            &trans        &trans      &trans  &trans                                                 &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
